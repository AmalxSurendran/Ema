// Autogenerated from Pigeon (v4.2.3), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class PlatformPose;
@class PlatformPoseLandmark;
@class PlatformInputImage;
@class InputImageData;
@class InputImagePlaneMetadata;

@interface PlatformPose : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithLandmarks:(NSDictionary<NSNumber *, PlatformPoseLandmark *> *)landmarks;
/// A map of all the landmarks in the detected pose.
@property(nonatomic, strong) NSDictionary<NSNumber *, PlatformPoseLandmark *> * landmarks;
@end

@interface PlatformPoseLandmark : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithType:(NSNumber *)type
    x:(NSNumber *)x
    y:(NSNumber *)y
    z:(NSNumber *)z
    likelihood:(NSNumber *)likelihood;
/// The landmark type.
@property(nonatomic, strong) NSNumber * type;
/// Gives x coordinate of landmark in image frame.
@property(nonatomic, strong) NSNumber * x;
/// Gives y coordinate of landmark in image frame.
@property(nonatomic, strong) NSNumber * y;
/// Gives z coordinate of landmark in image space.
@property(nonatomic, strong) NSNumber * z;
/// Gives the likelihood of this landmark being in the image frame.
@property(nonatomic, strong) NSNumber * likelihood;
@end

@interface PlatformInputImage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPlanes:(NSArray<FlutterStandardTypedData *> *)planes
    inputImageData:(InputImageData *)inputImageData;
/// The bytes of the image.
@property(nonatomic, strong) NSArray<FlutterStandardTypedData *> * planes;
@property(nonatomic, strong) InputImageData * inputImageData;
@end

@interface InputImageData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithHeight:(NSNumber *)height
    width:(NSNumber *)width
    imageRotation:(NSNumber *)imageRotation
    inputImageFormat:(NSNumber *)inputImageFormat
    planeData:(NSArray<InputImagePlaneMetadata *> *)planeData;
/// Size of image.
@property(nonatomic, strong) NSNumber * height;
@property(nonatomic, strong) NSNumber * width;
@property(nonatomic, strong) NSNumber * imageRotation;
/// Format of the input image.
@property(nonatomic, strong) NSNumber * inputImageFormat;
/// The plane attributes to create the image buffer on iOS.
///
/// Not used on Android.
@property(nonatomic, strong) NSArray<InputImagePlaneMetadata *> * planeData;
@end

@interface InputImagePlaneMetadata : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithBytesPerRow:(NSNumber *)bytesPerRow
    bytesPerPixel:(nullable NSNumber *)bytesPerPixel
    height:(nullable NSNumber *)height
    width:(nullable NSNumber *)width;
/// The row stride for this color plane, in bytes.
@property(nonatomic, strong) NSNumber * bytesPerRow;
@property(nonatomic, strong, nullable) NSNumber * bytesPerPixel;
/// Height of the pixel buffer on iOS.
@property(nonatomic, strong, nullable) NSNumber * height;
/// Width of the pixel buffer on iOS.
@property(nonatomic, strong, nullable) NSNumber * width;
@end

/// The codec used by PlatformPoseDetector.
NSObject<FlutterMessageCodec> *PlatformPoseDetectorGetCodec(void);

@protocol PlatformPoseDetector
- (void)processImageInputImage:(PlatformInputImage *)inputImage completion:(void(^)(PlatformPose *_Nullable, FlutterError *_Nullable))completion;
- (void)closeDetectorWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void PlatformPoseDetectorSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<PlatformPoseDetector> *_Nullable api);

NS_ASSUME_NONNULL_END
